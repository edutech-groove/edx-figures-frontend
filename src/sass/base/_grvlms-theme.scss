$color01: white;
$color02: black;
$color03: #E60978;
$color03d: #d3106c;
$color04: #fea628;
$color05: #207945;
$color06: $color02;
$color06d: $color02;
$color07: $color02;
$color07d: $color02;
$color08: #333333;
$color09: #999999;
$color10: #798f9a;
$color11: #a9bdc7;
$color11d: #9fb4bf;
$color12: #c4c4c4;
$color12d: #c4c4c4;
$color13: #f2f5f9;
$color14: #f4f7f8;
$color15: #8899aa;
$color16: #e3e3e3;
$color17: #5d7790;
$color18: #fafafa;

$color19: #9b9b9b;
$color20: #efefef;
$color21: #f04545;
$color22: #FFD9ED;
$color23: #FBFBFB;
$color24: #FF9D00;
$color24d: #EA9000;
$color25: #FFF5E5;

// Specific grv-theme colors (Use with caution for fallback)
$grvColor01: #25304c;
$grvColor02: #3b455e;
$grvColor03: #ffa850;
$grvColor04: #6760fa;
$grvColor05: #38c976;
$grvColor06: #0094e3;

$globalRadius: 4px;
$globalRadius1: 20px;
$globalRadius2: 40px;

$textColor01: #333 !default;
$textColor02: #666 !default;
$textColor03: #999 !default;

$grey01: #EDEDED;
$grey02: #e7e7e7;
$grey03: #d6d6d6;
$grey04: #f7f7f7;
$grey05: #F3F3F3;
$grey06: #4A4A4A;
$grey07: #e2e2e2;
$grey08: #f3f3f4;
$grey09: #e6e6e6;
$grey10: #C6CBD0;

// Override base vars
$primary-color: $color03;
$base-text-color: $textColor01;

$font1: "Nunito", sans-serif;
$font2: "Plumpfull Black", sans-serif;
$font-family: $font1;

// Functions & Mixins
@mixin useFont2() {
  font-family: $font2;
  font-weight: normal;
}

@mixin fz($px) {
  font-size: #{$px}px;
  font-size: calcRem($px);
}

// Global shadows

@mixin global-shadow {
  box-shadow: 0 1px 1px rgba(0,0,0,0.025),
              0 2px 2px rgba(0,0,0,0.05),
              0 4px 4px rgba(0,0,0,0.05),
              0 8px 8px rgba(0,0,0,0.075);
}

@mixin global-shadow-2 {
  box-shadow: 0 1px 1px rgba(0,0,0,0.0125),
              0 2px 2px rgba(0,0,0,0.025),
              0 4px 4px rgba(0,0,0,0.05);
}

@mixin global-shadow-3 {
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05),
    0 2px 2px rgba(0, 0, 0, 0.075);
}

@mixin global-shadow-4 {
  box-shadow: 1px 1px rgba(0, 0, 0, 0.05), 0 0 12px rgba(0, 0, 0, 0.125);
}

@mixin global-shadow-5 {
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.0125), 0 2px 2px rgba(0, 0, 0, 0.025);
}

@mixin global-shadow-6 {
  box-shadow: 0 1px 1px rgba(0,0,0,0.0125),
              0 3px 3px rgba(0,0,0,0.025),
              0 6px 6px rgba(0,0,0,0.035);
}

// Hover, Focus mixins
@mixin whenHover {
  &:hover,
  &:focus {
    &:not(:disabled) {
      @content;
    }
  }
}

@mixin whenHoverOnly {
  &:hover {
    &:not(:disabled) {
      @content;
    }
  }
}

@mixin whenFocusOnly {
  &:focus {
    &:not(:disabled) {
      @content;
    }
  }
}

/* Sizing shortcuts */
/*--------------------------------------*/
@mixin size($value) {
  $width: nth($value, 1);
  $height: $width;

  @if length($value) > 1 {
    $height: nth($value, 2);
  }

  @if is-size($height) {
    height: $height;
  } @else {
    @warn "`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.";
  }

  @if is-size($width) {
    width: $width;
  } @else {
    @warn "`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.";
  }
}

@import '~base/sass/base/buttons';
@import '~base/sass/base/typo';

@mixin setInputGeneric {
  @include useFont1;
  @include fz(15);
  border-radius: $globalRadius;
  border: calcRem(1) solid $grey08;
  box-shadow: none;
  color: $textColor01;
  font-style: normal;
  line-height: calcRem(21);
  outline: none;
  text-transform: none;
  background-color: $grey08;
  padding: calcRem(10) calcRem(15) !important;
  resize: none;
  background-image: none;

  &[disabled] {
    background-color: $grey09 !important;
    color: $textColor03 !important;
  }

  @include whenFocusOnly {
    background-color: $color01 !important;
    border-color: $color03 !important;
    color: $textColor01 !important;
    box-shadow: 0 0 0 calcRem(4) rgba($color03, 0.25) !important;
    outline: none;
    background-image: none;
  }

  &.block {
    display: block;
    width: 100%;
  }

  &.error,
  &.invalid {
    @include errorInput;

    &~.invalid-message,
    &~.error,
    &~.error-message {
      @include errorInputMessage;
    }
  }
}

@mixin errorInput {
  background-color: #FFEEEE !important;
  border-color: $color21 !important;
}

@mixin errorInputMessage {
  @include captain();
  color: $color21 !important;
  margin-top: 6px;
  margin-bottom: 0;
}

@mixin useSearchButtonStyle($svgColorType: 'fill') {
  @include usePrimaryButtonStyle($svgColorType);
  border-radius: 0 $globalRadius2 $globalRadius2 $globalRadius2;
  position: absolute;
  z-index: 5;
  right: 0;
  top: 0;
  padding: 0 calcRem(10);
  display: flex;
  align-items: center;
  justify-content: center;
  height: calcRem(40);
  width: calcRem(50);

  svg {
    width: calcRem(16);
    height: calcRem(16);

    path {
      @if ($svgColorType=='fill') {
        fill: $color01;
        stroke: none;
      }

      @else if ($svgColorType=='stroke') {
        stroke: $color01;
        fill: none;
      }
    }
  }
}

@mixin searchInputStyle() {
  background-color: $color01;
  border: 1px solid $grey03;
  border-bottom-right-radius: $globalRadius2;
  border-top-right-radius: $globalRadius2;
  height: calcRem(40);
  padding-right: calcRem(65);
}

body {
  textarea,
  input[type="text"],
  input[type="search"],
  input[type="url"],
  input[type="email"],
  input[type="password"],
  input[type="tel"],
  input[type="number"] {
    &.input {
      @include setInputGeneric;
    }
  
    @include setInputGeneric;
  }
}