@mixin coreButton($svgColorType:'fill') {
    background-image: none;
    border: 0;
    box-shadow: none;
    border-radius: $globalRadius1;
    line-height: 1.4;
    text-shadow: none;
    font-weight: 500;
    transition: none;
    text-align: center;
    text-decoration: none;
    letter-spacing: 0;
    min-width: unset;
    min-height: unset;
    display: inline-block;
    box-sizing: border-box;
    -webkit-font-smoothing: unset;
    @include useFont1;
    @include fz(15);

    .btn-content {
        display: flex;
        align-items: center;
        justify-content: center;

        svg {
            margin-right: 5px;
        }
    }

    svg {
        height: 14px;
        width: unset;
    }

    &:not([disabled]):not(.disabled) {
        &:hover {
            box-shadow: none;
            background-image: none;
            color: $color01;

            @if ($svgColorType=='fill') {
                svg {
                    fill: $color01;
                    stroke: none;

                    * {
                        fill: $color01;
                        stroke: none;
                    }
                }
            }

            @else if ($svgColorType=='stroke') {
                svg {
                    stroke: $color01;
                    fill: none;

                    * {
                        stroke: $color01;
                        fill: none;
                    }
                }
            }
        }
    }

    &:active,
    &:focus {
        box-shadow: none;
        color: $color01;
        outline: none;

        @if ($svgColorType=='fill') {
            svg {
                fill: $color01;
                stroke: none;

                * {
                    fill: $color01;
                    stroke: none;
                }
            }
        }

        @else if ($svgColorType=='stroke') {
            svg {
                stroke: $color01;
                fill: none;

                * {
                    stroke: $color01;
                    fill: none;
                }
            }
        }
    }

    &:disabled,
    &.disabled,
    &.is-disabled {
        background-color: #D4D4D4;
        color: $color01;

        @if ($svgColorType=='fill') {
            svg {
                fill: $color01;
                stroke: none;

                * {
                    fill: $color01;
                    stroke: none;
                }
            }
        }

        @else if ($svgColorType=='stroke') {
            svg {
                stroke: $color01;
                fill: none;

                * {
                    stroke: $color01;
                    fill: none;
                }
            }
        }
    }
}

@mixin usePrimaryButtonStyle($svgColorType:'fill') {
    background-color: $color03;
    color: $color01;
    @include coreButton($svgColorType);

    @if ($svgColorType=='fill') {
        svg {
            fill: $color01;
            stroke: none;

            * {
                fill: $color01;
                stroke: none;
            }
        }
    }

    @else if ($svgColorType=='stroke') {
        svg {
            stroke: $color01;
            fill: none;

            * {
                stroke: $color01;
                fill: none;
            }
        }
    }

    &:not([disabled]):not(.disabled) {
        &:hover {
            background-color: $color03d;
        }
    }

    &:active,
    &:focus {
        background-color: $color03d;
    }
}

@mixin useSecondaryButtonStyle($svgColorType:'fill') {
    background-color: $color22;
    color: $color03;
    @include coreButton($svgColorType);

    @if ($svgColorType=='fill') {
        svg {
            fill: $color03;
            stroke: none;

            * {
                fill: $color03;
                stroke: none;
            }
        }
    }

    @else if ($svgColorType=='stroke') {
        svg {
            stroke: $color03;
            fill: none;

            * {
                stroke: $color03;
                fill: none;
            }
        }
    }

    &:not([disabled]):not(.disabled) {

        &:hover,
        &.is-hovered {
            background-color: $color03d;
        }
    }

    &:active,
    &:focus {
        background-color: $color03d;
    }
}

@mixin usePrimaryYellowButtonStyle($svgColorType:'fill') {
    background-color: $color24;
    color: $color01;
    @include coreButton($svgColorType);

    @if ($svgColorType=='fill') {
        svg {
            fill: $color01;
            stroke: none;

            * {
                fill: $color01;
                stroke: none;
            }
        }
    }

    @else if ($svgColorType=='stroke') {
        svg {
            stroke: $color01;
            fill: none;

            * {
                stroke: $color01;
                fill: none;
            }
        }
    }

    &:not([disabled]):not(.disabled) {
        &:hover {
            background-color: $color24d;
        }
    }

    &:active,
    &:focus {
        background-color: $color24d;
    }
}

@mixin useSecondaryYellowButtonStyle($svgColorType:'fill') {
    background-color: $color25;
    color: $color24;
    @include coreButton($svgColorType);

    @if ($svgColorType=='fill') {
        svg {
            fill: $color24;
            stroke: none;

            * {
                fill: $color24;
                stroke: none;
            }
        }
    }

    @else if ($svgColorType=='stroke') {
        svg {
            stroke: $color24;
            fill: none;

            * {
                stroke: $color24;
                fill: none;
            }
        }
    }

    &:not([disabled]):not(.disabled) {

        &:hover,
        &.is-hovered {
            background-color: $color24d;
        }
    }

    &:active,
    &:focus {
        background-color: $color24d;
    }
}

@mixin useDangerButtonStyle($svgColorType:'fill') {
    background-color: $color21;
    color: $color01;
    @include coreButton($svgColorType);

    @if ($svgColorType=='fill') {
        svg {
            fill: $color01;
            stroke: none;

            * {
                fill: $color01;
                stroke: none;
            }
        }
    }

    @else if ($svgColorType=='stroke') {
        svg {
            stroke: $color01;
            fill: none;

            * {
                stroke: $color01;
                fill: none;
            }
        }
    }

    &:not([disabled]):not(.disabled) {

        &:hover,
        &.is-hovered {
            background-color: darken($color21, 10%);
        }
    }

    &:active,
    &:focus {
        background-color: darken($color21, 10%);
    }
}

@mixin useDangerTransparentButtonStyle($svgColorType:'fill') {
    background-color: transparent;
    color: $color21;
    @include coreButton($svgColorType);

    @if ($svgColorType=='fill') {
        svg {
            fill: $color21;
            stroke: none;

            * {
                fill: $color21;
                stroke: none;
            }
        }
    }

    @else if ($svgColorType=='stroke') {
        svg {
            stroke: $color21;
            fill: none;

            * {
                stroke: $color21;
                fill: none;
            }
        }
    }

    &:not([disabled]):not(.disabled) {

        &:active,
        &:focus,
        &:hover,
        &.is-hovered {
            color: darken($color21, 10%);

            @if ($svgColorType=='fill') {
                svg {
                    fill: darken($color21, 10%);
                    stroke: none;

                    * {
                        fill: darken($color21, 10%);
                        stroke: none;
                    }
                }
            }

            @else if ($svgColorType=='stroke') {
                svg {
                    stroke: darken($color21, 10%);
                    fill: none;

                    * {
                        stroke: darken($color21, 10%);
                        fill: none;
                    }
                }
            }
        }
    }
}

@mixin useGrvPrimaryButtonStyle($svgColorType: 'fill') {
    @include useGrvPrimaryButtonStyleLarge($svgColorType);
    padding: 8px 20px;
}

@mixin useGrvSecondaryButtonStyle($svgColorType: 'fill') {
    @include useSecondaryButtonStyle($svgColorType);
    padding: 8px 20px;
}

@mixin useGrvPrimaryButtonStyleLarge($svgColorType: 'fill') {
    @include usePrimaryButtonStyle($svgColorType);
    padding: 10px 27px;
}

@mixin useGrvSecondaryButtonStyleLarge($svgColorType: 'fill') {
    @include useSecondaryButtonStyle($svgColorType);
    padding: 10px 27px;
}

@mixin useGrvPrimaryButtonStyleSmall($svgColorType: 'fill') {
    @include useGrvPrimaryButtonStyleLarge($svgColorType);
    padding: 5px 7px;
}

@mixin useGrvSecondaryButtonStyleSmall($svgColorType: 'fill') {
    @include useSecondaryButtonStyle($svgColorType);
    padding: 5px 7px;
}

/// yellow

@mixin useGrvPrimaryYellowButtonStyle($svgColorType: 'fill') {
    @include usePrimaryYellowButtonStyle($svgColorType);
    padding: 8px 20px;
}

@mixin useGrvSecondaryYellowButtonStyle($svgColorType: 'fill') {
    @include useSecondaryYellowButtonStyle($svgColorType);
    padding: 8px 20px;
}

@mixin useGrvPrimaryYellowButtonStyleLarge($svgColorType: 'fill') {
    @include usePrimaryYellowButtonStyle($svgColorType);
    padding: 10px 27px;
}

@mixin useGrvSecondaryYellowButtonStyleLarge($svgColorType: 'fill') {
    @include useSecondaryYellowButtonStyle($svgColorType);
    padding: 10px 27px;
}

@mixin useGrvPrimaryYellowButtonStyleSmall($svgColorType: 'fill') {
    @include usePrimaryYellowButtonStyle($svgColorType);
    padding: 5px 7px;
}

@mixin useGrvSecondaryYellowButtonStyleSmall($svgColorType: 'fill') {
    @include useSecondaryYellowButtonStyle($svgColorType);
    padding: 5px 7px;
}

/// danger

@mixin useGrvDangerButtonStyle($svgColorType: 'fill') {
    @include useDangerButtonStyle($svgColorType);
    padding: 8px 20px;
}

@mixin useGrvDangerButtonStyleLarge($svgColorType: 'fill') {
    @include useDangerButtonStyle($svgColorType);
    padding: 10px 27px;
}

@mixin useGrvDangerButtonStyleSmall($svgColorType: 'fill') {
    @include useDangerButtonStyle($svgColorType);
    padding: 5px 7px;
}

@mixin useGrvDangerTransparentButtonStyle($svgColorType: 'fill') {
    @include useDangerTransparentButtonStyle($svgColorType);
    padding: 0;
}